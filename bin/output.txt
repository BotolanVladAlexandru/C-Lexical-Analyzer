+=============+
|keyword : int|
+=============+ (1)

+================+
|identifier : lis|
+================+ (2)

+=============+
|keyword : int|
+=============+ (1)

+============+
|operator : *|
+============+ (3)

+==============+
|identifier : a|
+==============+ (4)

+=============+
|keyword : int|
+=============+ (1)

+==============+
|identifier : N|
+==============+ (5)

+=============+
|keyword : int|
+=============+ (1)

+============+
|operator : *|
+============+ (3)

+=================+
|identifier : best|
+=================+ (6)

+==============+
|identifier : i|
+==============+ (7)

+==============+
|identifier : j|
+==============+ (8)

+================+
|identifier : max|
+================+ (9)

+============+
|operator : =|
+============+ (10)

+====================+
|identifier : INT_MIN|
+====================+ (11)

+=================+
|identifier : best|
+=================+ (6)

+============+
|operator : =|
+============+ (10)

+=============+
|keyword : int|
+=============+ (1)

+============+
|operator : *|
+============+ (3)

+===================+
|identifier : malloc|
+===================+ (12)

+================+
|keyword : sizeof|
+================+ (13)

+=============+
|keyword : int|
+=============+ (1)

+============+
|operator : *|
+============+ (3)

+==============+
|identifier : N|
+==============+ (5)

+=============+
|keyword : for|
+=============+ (14)

+==============+
|identifier : i|
+==============+ (7)

+============+
|operator : =|
+============+ (10)

+============+
|constant : 0|
+============+ (15)

+==============+
|identifier : i|
+==============+ (7)

+============+
|operator : <|
+============+ (16)

+==============+
|identifier : N|
+==============+ (5)

+==============+
|identifier : i|
+==============+ (7)

+=============+
|operator : ++|
+=============+ (17)

+=================+
|identifier : best|
+=================+ (6)

+==============+
|identifier : i|
+==============+ (7)

+============+
|operator : =|
+============+ (10)

+============+
|constant : 1|
+============+ (18)

+================================================================================================+
|comment : // best is an array initialized to all 1s becasue thats the shortest possible answer, |
+================================================================================================+ (19)

+=================================================================================================+
|comment : // which would happen when all numbers in the array are always decreasing. We will use |
+=================================================================================================+ (20)

+=================================================================================================+
|comment : // this array to keep track of the best answer for up to each position as we traverse  |
+=================================================================================================+ (21)

+======================================+
|comment : // through the array below. |
+======================================+ (22)

+===================================================+
|comment : // travese from 2nd element till the end |
+===================================================+ (23)

+===========================================================+
|comment : // this is the right boundary for each iteration |
+===========================================================+ (24)

+=============+
|keyword : for|
+=============+ (14)

+==============+
|identifier : i|
+==============+ (7)

+============+
|operator : =|
+============+ (10)

+============+
|constant : 1|
+============+ (18)

+==============+
|identifier : i|
+==============+ (7)

+============+
|operator : <|
+============+ (16)

+==============+
|identifier : N|
+==============+ (5)

+==============+
|identifier : i|
+==============+ (7)

+=============+
|operator : ++|
+=============+ (17)

+==========================================================+
|comment : // traverse from 1st element until i'th element |
+==========================================================+ (25)

+=============+
|keyword : for|
+=============+ (14)

+==============+
|identifier : j|
+==============+ (8)

+============+
|operator : =|
+============+ (10)

+============+
|constant : 0|
+============+ (15)

+==============+
|identifier : j|
+==============+ (8)

+============+
|operator : <|
+============+ (16)

+==============+
|identifier : i|
+==============+ (7)

+==============+
|identifier : j|
+==============+ (8)

+=============+
|operator : ++|
+=============+ (17)

+=================+
|comment : // if: |
+=================+ (26)

+=================================================================+
|comment : // a[j] is less than a[i] (number to the left of a[j]) |
+=================================================================+ (27)

+=====================+
|comment : //     and |
+=====================+ (28)

+============================================================+
|comment : // this increases the best count for that element |
+============================================================+ (29)

+============+
|keyword : if|
+============+ (30)

+==============+
|identifier : a|
+==============+ (4)

+==============+
|identifier : i|
+==============+ (7)

+============+
|operator : >|
+============+ (31)

+==============+
|identifier : a|
+==============+ (4)

+==============+
|identifier : j|
+==============+ (8)

+=============+
|operator : &&|
+=============+ (32)

+=================+
|identifier : best|
+=================+ (6)

+==============+
|identifier : i|
+==============+ (7)

+============+
|operator : <|
+============+ (16)

+=================+
|identifier : best|
+=================+ (6)

+==============+
|identifier : j|
+==============+ (8)

+============+
|operator : +|
+============+ (33)

+============+
|constant : 1|
+============+ (18)

+===================================+
|comment : // make a record of this |
+===================================+ (34)

+=================+
|identifier : best|
+=================+ (6)

+==============+
|identifier : i|
+==============+ (7)

+============+
|operator : =|
+============+ (10)

+=================+
|identifier : best|
+=================+ (6)

+==============+
|identifier : j|
+==============+ (8)

+============+
|operator : +|
+============+ (33)

+============+
|constant : 1|
+============+ (18)

+=====================================================================+
|comment : // if this best is greater than max, make a record of that |
+=====================================================================+ (35)

+============+
|keyword : if|
+============+ (30)

+================+
|identifier : max|
+================+ (9)

+============+
|operator : <|
+============+ (16)

+=================+
|identifier : best|
+=================+ (6)

+==============+
|identifier : i|
+==============+ (7)

+================+
|identifier : max|
+================+ (9)

+============+
|operator : =|
+============+ (10)

+=================+
|identifier : best|
+=================+ (6)

+==============+
|identifier : i|
+==============+ (7)

+==================+
|comment : // free |
+==================+ (36)

+=================+
|identifier : free|
+=================+ (37)

+=================+
|identifier : best|
+=================+ (6)

+====================+
|comment : // return |
+====================+ (38)

+================+
|keyword : return|
+================+ (39)

+================+
|identifier : max|
+================+ (9)

+=============+
|keyword : int|
+=============+ (1)

+=================+
|identifier : main|
+=================+ (40)

+============================+
|comment : // sample array.  |
+============================+ (41)

+=============+
|keyword : int|
+=============+ (1)

+==============+
|identifier : b|
+==============+ (42)

+============+
|operator : =|
+============+ (10)

+============+
|constant : 1|
+============+ (18)

+============+
|constant : 3|
+============+ (43)

+============+
|constant : 2|
+============+ (44)

+============+
|constant : 4|
+============+ (45)

+============+
|constant : 3|
+============+ (43)

+============+
|constant : 5|
+============+ (46)

+============+
|constant : 4|
+============+ (45)

+============+
|constant : 6|
+============+ (47)

+=============================+
|comment : // should return 5 |
+=============================+ (48)

+===================+
|identifier : printf|
+===================+ (49)

+=================+
|constant : "%d\n"|
+=================+ (50)

+================+
|identifier : lis|
+================+ (2)

+==============+
|identifier : b|
+==============+ (42)

+============+
|constant : 8|
+============+ (51)

